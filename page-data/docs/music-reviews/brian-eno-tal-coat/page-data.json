{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/music-reviews/brian-eno-tal-coat","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music music-review mus-407\",\n  \"type\": \"music-review\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"brian-eno---tal-coat-1982\"\n  }, \"Brian Eno - Tal Coat (1982)\"), mdx(\"h2\", {\n    \"id\": \"initial-notes\"\n  }, \"Initial Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"water-like sounds, bubbly, underwater\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tonal, use of drone (saw-like), focusing on C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sequenced \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/sound-synthesisorsynth\",\n    \"title\": \"sound-synthesis|synth\"\n  }, \"[[sound-synthesis|synth]]\"), \" sounds, noisy/filtered, almost inharmonic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"piano\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"string/string-pad\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"overhead noise or dense inharmonic spectrum\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bb, F# over C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gently wavering \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \", especially in the bass\")), mdx(\"h2\", {\n    \"id\": \"writeup\"\n  }, \"Writeup\"), mdx(\"p\", null, \"The drone-like atmosphere of this Brian Eno's \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Tal Coat\"), \" felt like a meditation. Over my first listen, I paid attention to two main things: the individual components of the atmosphere and the harmony evoked throughout the piece, both of which serve to reinforce the meditative atmosphere laid out by Brian Eno.\"), mdx(\"p\", null, \"The atmosphere itself is made of several components, and Eno blends these components in and out of the foreground to create an ever-evolving atmosphere that gently wavers. The atmospheric components are comprised of the following:\"), mdx(\"p\", null, \"A saw-like synth bass drone permeates the piece, staying primarily on C while occasionally switching tones before going back to C.\"), mdx(\"p\", null, \"Synth pads continually float throughout the piece, and they tend to sound like anything from strings to voices, with an ever-changing timbre to keep the atmosphere from being stagnant.\"), mdx(\"p\", null, \"A bubbly mix of sequenced pluck-like synth hits begin within the first few seconds of the piece and continue until the end in the higher register. I also heard a brief instance of piano at 2:20.\"), mdx(\"p\", null, \"These tonal components are overlaid by a wash of high-register noise and a blend of deep, bubble-like samples to give an underwater vibe to the entire piece. Additionally, the pads and bass move across the C mixolydian scale (with the pads playing an E -> F# -> G at 4:18 for a Lydian flavor) although they mostly avoid the third. This tendency of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/pitchorpitches\",\n    \"title\": \"pitch|pitches\"\n  }, \"[[pitch|pitches]]\"), \" creates an ambiguity in tonality (neither major or minor), which I think serves to leave the listener in both a harmonic \\\"limbo\\\" of sorts; very complementary of the floaty, bubbly atmosphere.\"), mdx(\"p\", null, \"While I felt no strong sense of traditional form in this piece, the ever-changing timbre and small little moments of one-time sounds made the piece very interesting upon close listening. While it can certainly sit in the background, I felt rewarded noticing the lydian moment in the pads and the sole entrance of the piano. Overall, I enjoyed listening to this piece, and I'm curious as to the overall sculpting of the pads and how exactly each of the components were created.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sound sound-properties amplitude\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"amplitude\"\n  }, \"Amplitude\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Amplitude\"), \" measures deviation of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"pressure\"), \" or displacement from rest/equilibrium\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a broad, generic term\")), mdx(\"p\", null, \"Acoustic \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"power\"), \", measured in Watts (W) measures the rate at which energy is converted (Joules per second)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"commonly indicated on signal amplifiers\")), mdx(\"p\", null, \"Sound \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"intensity\"), \" measures power distributed over a unit area\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"power measures sound strength irrespective of source/listener locations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"intensity varies depending on distance between source and listener\")), mdx(\"p\", null, \"Sound intensity is proportional to sound pressured squared\"), mdx(\"p\", null, \"$10^{12}$ \\u2192 the ratio of the greatest intensity we can tolerate to the smallest intensity we can perceive\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"annoyingly large range of numbers to work with, resulting in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/decibel\",\n    \"title\": \"decibel\"\n  }, \"[[decibel]]\"), \" unit\")), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/envelopeorEnvelopes\",\n    \"title\": \"envelope|Envelopes\"\n  }, \"[[envelope|Envelopes]]\"), \" are used to describe amplitude over time.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"8af8bf56-6f25-5556-b65a-eb1a38b12763","fields":{"slug":"/docs/amplitude","title":"Amplitude"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/music-reviews/brian-eno-tal-coat","title":"Brian Eno - Tal Coat (1982)"}}},"pageContext":{"id":"62241bfb-73b6-55fb-a80d-374ce076f7de"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}