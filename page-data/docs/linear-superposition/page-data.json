{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/linear-superposition","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 waves wave-phenomena\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"linear-superposition\"\n  }, \"Linear Superposition\"), mdx(\"p\", null, \"Unlike matter, waves can coexist in the same physical space and even pass through each other and retain essential characteristics.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Principle of Linear Superposition:\")), mdx(\"p\", null, \"Waves can pass through one another while retaining their original characteristics:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pressure A + pressure B = pressure A + B\")), mdx(\"p\", null, \"For \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sound-wavesorsound-waves\",\n    \"title\": \"sound-waves|sound waves\"\n  }, \"[[sound-waves|sound waves]]\"), \", this phenomenon causes \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wave-interferenceorinterference\",\n    \"title\": \"wave-interference|interference\"\n  }, \"[[wave-interference|interference]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/docs/linear-superposition","title":"Linear Superposition"}}},"pageContext":{"id":"af7f496e-f6a0-58eb-a7ab-a0b5999b3626"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}