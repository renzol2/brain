{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/compression-myths","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"compression\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"gregory-scott-demolishing-the-myths-of-compression\"\n  }, \"Gregory Scott: Demolishing the Myths of Compression\"), mdx(\"p\", null, \"The following are my short notes on this article on debunking common myths about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/compression\",\n    \"title\": \"compression\"\n  }, \"[[compression]]\"), \".\"), mdx(\"p\", null, \"TLDR: All myths are related to the behavior of a compressor's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"attack\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"release\"), \" parameters.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Attack is the length of time it takes a compressor to apply roughly two-thirds of the targeted amount of gain reduction\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Release is the time it takes a compressor to restore two-thirds of the reduced gain to the compressed signal\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Once a signal is over the threshold, both attack and release are \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"constantly\"), \" at play; it's not only when the signal crosses the threshold\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"While compressors generally reduce dynamic range, the attack and release parameters can be adjusted to do the exact opposite effect (for creative and practical use).\")), mdx(\"h2\", {\n    \"id\": \"myth-1\"\n  }, \"Myth 1\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Myth #1: Attack is the time it takes for a compressor to begin compressing once a signal crosses over the threshold.\")), mdx(\"p\", null, \"The above definition is commonly cited as a definition of attack, but it is incorrect. The correct definition of attack (Gregory Scott):\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Correction: Attack is the length of time it takes a compressor to apply roughly \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"two-thirds\"), \" of the targeted amount of gain reduction\")), mdx(\"p\", null, \"This definition leads to a few things:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a compressor begins compressing as soon as a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/audio-signalorsignal\",\n    \"title\": \"audio-signal|signal\"\n  }, \"[[audio-signal|signal]]\"), \" crosses the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/threshold-drporthreshold\",\n    \"title\": \"threshold-drp|threshold\"\n  }, \"[[threshold-drp|threshold]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"attack is not a delay before an action occurs, or a measurement of time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rather, attack is a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"rate\"), \"; a measurement of the speed at which gain reduction is occurring\")), mdx(\"h2\", {\n    \"id\": \"myth-2\"\n  }, \"Myth 2\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Myth #2: Release is the time it takes a compressor to release compression after the signal drops below threshold\")), mdx(\"p\", null, \"Similar to last myth, here is the correct definition:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Correction: Release is the time it takes a compressor to restore two-thirds of the reduced gain to the compressed signal.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"every \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/decibelordB\",\n    \"title\": \"decibel|dB\"\n  }, \"[[decibel|dB]]\"), \" of gain a compressor takes away, it must put back\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"release this process of \\\"gain restoration\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the faster the release, the faster the compressor restores gain\")), mdx(\"h2\", {\n    \"id\": \"myth-3\"\n  }, \"Myth 3\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Myth #3: A compressor won\\u2019t release until the signal drops below the threshold\")), mdx(\"p\", null, \"In reality, attacking and releasing are the only two things a compressor can do.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"or: any time the gain reduction meter on a compressor is moving, it is either attacking or releasing the signal\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"simple debunk:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"feed an audio signal through a compressor such that there is a constant amount of reduction, ex. 6-12 dB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"change the attack and release knobs as the signal is playing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if the myths were true, these knobs shouldn't do anything; but they do\")))), mdx(\"h2\", {\n    \"id\": \"myth-4\"\n  }, \"Myth 4\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Myth #4: Compression reduces dynamic range\")), mdx(\"p\", null, \"Usually true, but not always.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Correction: Yes, a compressor can and does push down on the loudest stuff. But no, that doesn't mean the dynamic range is automatically reduced.\")), mdx(\"p\", null, \"Simple debunk:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"feed a drum loop (or drum buss) through a compressor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set a medium to high ratio, slowest attack, and fastest release\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dig the threshold in hard\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the loud stuff stays just as loud (for a shorter time), while the quiet stuff is quieter, resulting in an \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"increased\"), \" dynamic range\")), mdx(\"p\", null, \"The above technique is often used on drum busses for a combination of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/buss-compressionorbuss-compression\",\n    \"title\": \"buss-compression|buss compression\"\n  }, \"[[buss-compression|buss compression]]\"), \" to enhance \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transientortransients\",\n    \"title\": \"transient|transients\"\n  }, \"[[transient|transients]]\"), \" and blending with the dry signal using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/parallel-compressionorparallel-compression\",\n    \"title\": \"parallel-compression|parallel compression\"\n  }, \"[[parallel-compression|parallel compression]]\"), \".\"), mdx(\"h2\", {\n    \"id\": \"myth-5\"\n  }, \"Myth 5\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Myth 5: Compression makes sounds bigger\")), mdx(\"p\", null, \"TLDR; Compression make sounds \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"denser\"), \". Density can be used to make sounds both big and small; the goal is make each sound as dense \\\"as necessary to transmit emotion... and no denser\\\".\"), mdx(\"p\", null, \"Quote involving Michael Brauer from Mix With the Masters:\"), mdx(\"p\", null, \"... pushing a sound into a compressor is like pushing an object into a stretched rubber band. The harder you push the object, the more the rubber band pushes back. Michael listens for the point where there\\u2019s a musical push-pull movement and the comp feels springy and flexible.\"), mdx(\"p\", null, \"Not pushing enough results in too little resistance \\u2013 no interesting movement. But push too far and the rubber band loses its elasticity and becomes stiff \\u2013 the sound loses its life. What\\u2019s more, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"when you push too hard into a compressor the sound becomes small.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"That means attuning your ears to the proportionate spaces around each tone like the curves and twists of the pieces in a jigsaw puzzle, filling up the spectrum where necessary while preserving enough dynamics to allow the sounds, and with them the entirety of your mix, to breathe \\u2013 to have air around the elements such that you feel the impact when those spaces contract and the sounds collide.\\nEverything in a mix must be shaped with complete awareness and respect for every other piece in the puzzle\\u2026 or it won\\u2019t fit. It won\\u2019t assemble into the vivid picture that the song wants to be \\u2013 a gripping story the listener wants to surrender to from start to finish.\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.attackmagazine.com/features/columns/gregory-scott-demolishing-the-myths-of-compression/2/\"\n  }, \"https://www.attackmagazine.com/features/columns/gregory-scott-demolishing-the-myths-of-compression/2/\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music compression mus-407 production dynamics drp dynamic-range-compression dynamic-range\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"compression\"\n  }, \"Compression\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Compression\"), \" is a form of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dynamic-range-processingordynamic-range-control\",\n    \"title\": \"dynamic-range-processing|dynamic range control\"\n  }, \"[[dynamic-range-processing|dynamic range control]]\"), \" that (generally) reduces the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" of a signal. A \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"compressor\"), \" is an amplifier whose gain is determined by an input \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/audio-signalorsignal\",\n    \"title\": \"audio-signal|signal\"\n  }, \"[[audio-signal|signal]]\"), \" level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when signal level > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \" threshold, compression effect becomes active and attenuates a signal\")), mdx(\"p\", null, \"Frequently used to regulate a \\\"peaky\\\" signal during recording, i.e. to provide a more constant and predictable level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. rock drum set, swaying vocalist\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"essentially, automates \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/mixer\",\n    \"title\": \"mixer\"\n  }, \"[[mixer]]\"), \" input faders to avoid manual adjustment\")), mdx(\"p\", null, \"Compression is also used during mixing/mastering to provide a higher overall mix level.\"), mdx(\"p\", null, \"Compressor behavior is modeled using a graph of its \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transfer-functionortransfer-function\",\n    \"title\": \"transfer-function|transfer function\"\n  }, \"[[transfer-function|transfer function]]\"), \", which is generally comprised of these parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ratio-drporratio\",\n    \"title\": \"ratio-drp|ratio\"\n  }, \"[[ratio-drp|ratio]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/threshold-drporthreshold\",\n    \"title\": \"threshold-drp|threshold\"\n  }, \"[[threshold-drp|threshold]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"makeup gain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"attack/release\")), mdx(\"p\", null, \"Compressors can also feature the following additional parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"auto mode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lookahead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stereo linking\")), mdx(\"h2\", {\n    \"id\": \"ratio\"\n  }, \"Ratio\"), mdx(\"p\", null, \"The severity of signal attenuation is determined by a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"compression \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"/ratio-drporratio\",\n    \"title\": \"ratio-drp|ratio\"\n  }, \"[[ratio-drp|ratio]]\"), \"\"), \".\"), mdx(\"p\", null, \"Downward compression ratios of 8:1 and above are generally considered \\\"extreme\\\" compression\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can result in a perceptual distortion of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transientortransients\",\n    \"title\": \"transient|transients\"\n  }, \"[[transient|transients]]\"), \", noticeable changes in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/timbre\",\n    \"title\": \"timbre\"\n  }, \"[[timbre]]\"), \", often described as a \\\"squashed\\\" sound\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A compressors with ratios above 10:1 would generally be considered a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/limiter\",\n    \"title\": \"limiter\"\n  }, \"[[limiter]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"makeup-gain\"\n  }, \"Makeup gain\"), mdx(\"p\", null, \"After compression is applied, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"makeup gain\"), \" is a normal amplification process used to compensate for the loss in overall level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"typically used to restore peaks to their original level after compression creates more \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/headroom\",\n    \"title\": \"headroom\"\n  }, \"[[headroom]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"content below threshold, including the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise-floorornoise-floor\",\n    \"title\": \"noise-floor|noise floor\"\n  }, \"[[noise-floor|noise floor]]\"), \", undergoes a net level increases\")), mdx(\"h2\", {\n    \"id\": \"types-of-compression\"\n  }, \"Types of Compression\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/limiterorLimiting\",\n    \"title\": \"limiter|Limiting\"\n  }, \"[[limiter|Limiting]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/upward-compressionorUpward-compression\",\n    \"title\": \"upward-compression|Upward compression\"\n  }, \"[[upward-compression|Upward compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/multiband-compressionorMultiband-compression\",\n    \"title\": \"multiband-compression|Multiband compression\"\n  }, \"[[multiband-compression|Multiband compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/parallel-compressionorParallel-compression\",\n    \"title\": \"parallel-compression|Parallel compression\"\n  }, \"[[parallel-compression|Parallel compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/buss-compressionorBuss-compression\",\n    \"title\": \"buss-compression|Buss compression\"\n  }, \"[[buss-compression|Buss compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/side-chainingorSidechain-compression\",\n    \"title\": \"side-chaining|Sidechain compression\"\n  }, \"[[side-chaining|Sidechain compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serial compression\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MUS 407 Dynamic Range Processing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.blackghostaudio.com/blog/the-ultimate-guide-to-compression\"\n  }, \"https://www.blackghostaudio.com/blog/the-ultimate-guide-to-compression\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"fb97a65e-6cd0-5159-bca3-edace78adc10","fields":{"slug":"/docs/compression","title":"Compression"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/compression-myths","title":"Gregory Scott: Demolishing the Myths of Compression"}}},"pageContext":{"id":"b2af09bd-5ea9-5a3c-b578-3cde10a2dc5c"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}