{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/phase-vocoder","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"ece-402 dsp\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"phase-vocoder\"\n  }, \"Phase Vocoder\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"phase vocoder\"), \" is a type of vocoder-purposed \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/algorithm\",\n    \"title\": \"algorithm\"\n  }, \"[[algorithm]]\"), \" which can interpolate information present in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/frequency\",\n    \"title\": \"frequency\"\n  }, \"[[frequency]]\"), \" and time domains of audio signals by using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/phase\",\n    \"title\": \"phase\"\n  }, \"[[phase]]\"), \" information extracted from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/short-time-fourier-transformorSTFTs\",\n    \"title\": \"short-time-fourier-transform|STFTs\"\n  }, \"[[short-time-fourier-transform|STFTs]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allows frequency-domain modifications to a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/digital-audioordigital\",\n    \"title\": \"digital-audio|digital\"\n  }, \"[[digital-audio|digital]]\"), \" sound file (typically time expansion/\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/compression\",\n    \"title\": \"compression\"\n  }, \"[[compression]]\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/pitch-shiftingorpitch-shifting\",\n    \"title\": \"pitch-shifting|pitch shifting\"\n  }, \"[[pitch-shifting|pitch shifting]]\"), \").\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Phase_vocoder\"\n  }, \"https://en.wikipedia.org/wiki/Phase_vocoder\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"algorithm\"\n  }, \"Algorithm\"), mdx(\"p\", null, \"An \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"algorithm\"), \" is a set of elementary instructions.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"algorithms are explicit, precise, unambiguous\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"usually, mechanically-executable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"usually intended to accomplish a specific purpose\")), mdx(\"p\", null, \"Algorithms have been with us since the dawn of civilization, but have become a topic of formal academic study only within the past few decades\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"descriptions of step-by-step arithmetic as early examples of written human language\")), mdx(\"h2\", {\n    \"id\": \"describing-algorithms\"\n  }, \"Describing Algorithms\"), mdx(\"p\", null, \"A complete description of any algorithm has four components:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"What\"), \": a precise specification of the problem that the algorithm solves\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"How\"), \": a precise description of the algorithm itself\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Why\"), \": a proof that the algorithm solves the problem it is supposed to solve\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"How fast\"), \": an analysis of the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/runtime\",\n    \"title\": \"runtime\"\n  }, \"[[runtime]]\"), \" of the algorithm\")), mdx(\"p\", null, \"It is not necessary to develop these four components in this particular order.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"specifications, descriptions, correctness, and analyses evolve simultaneously or are iterated on separately\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"presenting\"), \" these components separately is usually clearest for the reader\")), mdx(\"p\", null, \"Aim your descriptions at the right audience: ex. a competent but skeptical programmer \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"who is not as clever as you are\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"over time, you naturally build up lots of intuition about the problem\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"anyone \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"reading\"), \" the algorithm later, or the derived code, will not share that intuition or experience\")), mdx(\"p\", null, \"TODO: take more notes\"), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jeffe.cs.illinois.edu/teaching/algorithms/\"\n  }, \"Algorithms by Jeff Erickson\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jeffe.cs.illinois.edu/teaching/algorithms/book/00-intro.pdf\"\n  }, \"Intro\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"ed5b067d-5391-5745-9b7c-e97d4d12bd17","fields":{"slug":"/docs/algorithm","title":"Algorithm"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sound sound-properties frequency\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"frequency\"\n  }, \"Frequency\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"frequency\"), \" of a periodic waveform is the number of cycles that occur per second, measured in Hertz (Hz)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"periodic waveform\"), \": cyclic behavior, repeatedly exhibits the same pattern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"non-period/aperiodic\"), \" waveform: irregular, non-repeating pattern\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also called \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"/noise\",\n    \"title\": \"noise\"\n  }, \"[[noise]]\"), \", unwanted sound\"))))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"period:\"), \" duration, in seconds, of one full cycle of a periodic waveform\"), mdx(\"p\", null, \"inverse relationship between frequency and period: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"f = 1 / p\")), mdx(\"h2\", {\n    \"id\": \"relationship\"\n  }, \"Relationship\"), mdx(\"p\", null, \"Below is the mathematical relationship between speed of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sound-wavesorsound\",\n    \"title\": \"sound-waves|sound\"\n  }, \"[[sound-waves|sound]]\"), \", frequency, and wavelength\"), mdx(\"p\", null, \"$$v = f \\\\lambda$$\"), mdx(\"p\", null, \"v: speed of sound (meters/second)\"), mdx(\"p\", null, \"f: frequency (cycles/second)\"), mdx(\"p\", null, \"$\\\\lambda$: wavelength (meters/cycles)\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"1007ca48-c6ac-51ef-bcd5-e9bfe6322d2e","fields":{"slug":"/docs/frequency","title":"Frequency"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sound sound-properties beating phase\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"phase\"\n  }, \"Phase\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Phase\"), \" refers to a specific point within one cycle of a periodic wave.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the initial phase of a periodic waveform has essentially no effect on our perception of such a wave, including \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/sound-wavesorsound-waves\",\n    \"title\": \"sound-waves|sound waves\"\n  }, \"[[sound-waves|sound waves]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"however, multiple sound waves can result in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/beating\",\n    \"title\": \"beating\"\n  }, \"[[beating]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"one cycle = 360 degrees = 2\\u03C0 radians\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"c9f3ddec-7c8a-5f6e-bdb4-623f80e77162","fields":{"slug":"/docs/phase","title":"Phase"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music compression mus-407 production dynamics drp dynamic-range-compression dynamic-range\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"compression\"\n  }, \"Compression\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"compressor\"), \" is an amplifier whose gain is determined by an input signal level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when signal level > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \" threshold, compression effect becomes active and attenuates a signal\")), mdx(\"p\", null, \"Frequently used to regulate a \\\"peaky\\\" signal during recording, i.e. to provide a more constant and predictable level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. rock drum set, swaying vocalist\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"essentially, automates mixer input faders to avoid manual adjustment\")), mdx(\"p\", null, \"Compression is also used during mixing/mastering to provide a higher overall mix level.\"), mdx(\"p\", null, \"Compressor behavior is modeled using a graph of its \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transfer-functionortransfer-function\",\n    \"title\": \"transfer-function|transfer function\"\n  }, \"[[transfer-function|transfer function]]\"), \".\"), mdx(\"h2\", {\n    \"id\": \"ratio\"\n  }, \"Ratio\"), mdx(\"p\", null, \"The severity of signal attenuation is determined by a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"compression ratio\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Represents change in input signal (dB) compared to change in output signal (dB)\")), mdx(\"p\", null, \"e.g. compression ratio of 4:1\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"above threshold, if input signal increases by 4 dB, output signal is attenuated so that the increase is only 1 dB\")), mdx(\"p\", null, \"Ratios of 8:1 and above are generally considered \\\"extreme\\\" compression\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can result in a perceptual distortion of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \"s, noticeable changes in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/timbre\",\n    \"title\": \"timbre\"\n  }, \"[[timbre]]\"), \", often described as a \\\"squashed\\\" sound\")), mdx(\"h2\", {\n    \"id\": \"makeup-gain\"\n  }, \"Makeup gain\"), mdx(\"p\", null, \"After compression is applied, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"makeup gain\"), \" is a normal amplification process used to compensate for the loss in overall level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"typically used to restore peaks to their original level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"content below threshold undergoes a net level increases\")), mdx(\"h2\", {\n    \"id\": \"multiband-compression\"\n  }, \"Multiband compression\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multi-band compressor\"), \" divides a full \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/spectrum\",\n    \"title\": \"spectrum\"\n  }, \"[[spectrum]]\"), \" signal into discrete \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"docs/frequencyorfrequency\",\n    \"title\": \"docs/frequency|frequency\"\n  }, \"[[docs/frequency|frequency]]\"), \" bands and applies compression uniquely to each band.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allows for more detailed control of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"compressed spectral bands are summed after compressions are applied\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"often used to affect different parts of a drum set, e.g. compress only the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/kick\",\n    \"title\": \"kick\"\n  }, \"[[kick]]\"), \" drum if the whole drum set is recorded on a single track\")), mdx(\"h2\", {\n    \"id\": \"parallel-compression\"\n  }, \"Parallel Compression\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/parallel-compressionorParallel-compression\",\n    \"title\": \"parallel-compression|Parallel compression\"\n  }, \"[[parallel-compression|Parallel compression]]\"), \" involves blending an original dry signal with a compressed duplicate of the original signal (wet).\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"fb97a65e-6cd0-5159-bca3-edace78adc10","fields":{"slug":"/docs/compression","title":"Compression"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/phase-vocoder","title":"Phase Vocoder"}}},"pageContext":{"id":"bb776270-6b24-5052-a555-b0d633c2b87e"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}