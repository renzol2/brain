{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/compander","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music mus-407 electroacoustic dynamic-range\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"compander\"\n  }, \"Compander\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"compander\"), \" combines the functionality of a compressor (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"docs/compressionorcompression\",\n    \"title\": \"docs/compression|compression\"\n  }, \"[[docs/compression|compression]]\"), \") and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/expander\",\n    \"title\": \"expander\"\n  }, \"[[expander]]\"), \" into one processing unit\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"portmanteau of \\\"compressor\\\" and \\\"expander\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also called \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Noise reduction\"), \" (NR) units\")), mdx(\"p\", null, \"Companders are historically used in analog tape recording.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"input signal is compressed to allow recording at high levels while avoiding tape saturation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"output signal is expanded on reproduction to attenuate tape \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise\",\n    \"title\": \"noise\"\n  }, \"[[noise]]\"), \" and return peaks and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \"s to original level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"result is a low-noise but wide \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" recording\")), mdx(\"p\", null, \"Some advanced noise reduction schemes use companders in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"docs/frequencyorfrequency\",\n    \"title\": \"docs/frequency|frequency\"\n  }, \"[[docs/frequency|frequency]]\"), \"-dependent way.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"signal is split into several frequency bands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"each band is companded separately\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"results in more transparent recording with less side effects or artifacts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"continuous glissandi or small irregularities can lead to audible (and potentially unwanted) colorations\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music mus-407 electroacoustic dynamic-range expander\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"expander\"\n  }, \"Expander\"), mdx(\"p\", null, \"Like a compressor (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/compression\",\n    \"title\": \"compression\"\n  }, \"[[compression]]\"), \"), an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"expander\"), \" is an amplifier whose gain is determined by an input signal level.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has a threshold and ratio, but expands the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" instead of compressing it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when signal < threshold, expansion effect becomes active and attenuates the signal\")), mdx(\"p\", null, \"Expanders are typically used to make quiet sounds even quieter. They\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. reducing \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise\",\n    \"title\": \"noise\"\n  }, \"[[noise]]\"), \" in old analog recordings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise-gateornoise-gates\",\n    \"title\": \"noise-gate|noise gates\"\n  }, \"[[noise-gate|noise gates]]\"), \" and expanders often used for similar purposes\")), mdx(\"p\", null, \"Like compressors, ratio expressed as input change to output change\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"below threshold, a ratio of 1:3 means if the input falls by 1 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/decibelordB\",\n    \"title\": \"decibel|dB\"\n  }, \"[[decibel|dB]]\"), \", the output will fall by 3 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/decibelordB\",\n    \"title\": \"decibel|dB\"\n  }, \"[[decibel|dB]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"b57ba599-ca58-5034-a3c7-a2e58dc6185d","fields":{"slug":"/docs/expander","title":"Expander"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 ece-402 audio signal-processing dsp\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"noise\"\n  }, \"Noise\"), mdx(\"p\", null, \"In audio and signal processing, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"noise\"), \" refers to a a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sound-wavesorsound\",\n    \"title\": \"sound-waves|sound\"\n  }, \"[[sound-waves|sound]]\"), \" with a broadband \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/spectrum\",\n    \"title\": \"spectrum\"\n  }, \"[[spectrum]]\"), \" of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/frequencyorfrequencies\",\n    \"title\": \"frequency|frequencies\"\n  }, \"[[frequency|frequencies]]\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"on its own, sounds like a hiss (usually high frequency but can be low as well)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"considered \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/inharmonicityorinharmonic\",\n    \"title\": \"inharmonicity|inharmonic\"\n  }, \"[[inharmonicity|inharmonic]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"present in many sounds, especially acoustic and recorded sounds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"excessive amounts are usually considered unwanted in unnatural recordings or audio\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"used as a base for \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/subtractive-synthesisorsubtractive-synthesis\",\n    \"title\": \"subtractive-synthesis|subtractive synthesis\"\n  }, \"[[subtractive-synthesis|subtractive synthesis]]\"), \" due to spectral richness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also refers to random or non-useful spectral information within \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/spectral-analysisorspectral-analysis\",\n    \"title\": \"spectral-analysis|spectral analysis\"\n  }, \"[[spectral-analysis|spectral analysis]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Noise_(signal_processing)\"\n  }, \"https://en.wikipedia.org/wiki/Noise_(signal_processing)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"db47ad9a-064d-50a9-a271-c71f2a85fa4a","fields":{"slug":"/docs/noise","title":"Noise"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sound sound-properties amplitude\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"transient\"\n  }, \"Transient\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"transient\"), \" in sound and music is a moment where the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \" changes drastically, conventionally in a large upward change.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"used synonymously with \\\"attack\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"associated with percussion and drums, ex. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/kick\",\n    \"title\": \"kick\"\n  }, \"[[kick]]\"), \" drums\")), mdx(\"p\", null, \"In an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \", the transient is the envelope region during which amplitude is changing.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"02df71de-6a20-5c6a-ac13-67598e6da6ef","fields":{"slug":"/docs/transient","title":"Transient"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/compander","title":"Compander"}}},"pageContext":{"id":"8e629b3d-015d-5ec2-bbda-37faafad12b0"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}