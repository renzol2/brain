{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/digital-audio-standards","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sampling\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"digital-audio-standards\"\n  }, \"Digital Audio Standards\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Digital Audio Standards\"), \" are a set of specifications that standardize the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/digital-audioordigital-audio\",\n    \"title\": \"digital-audio|digital audio\"\n  }, \"[[digital-audio|digital audio]]\"), \" industry.\"), mdx(\"p\", null, \"The compact disc stores 16-\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/bit\",\n    \"title\": \"bit\"\n  }, \"[[bit]]\"), \" audio at a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sample-rateorsample-rate\",\n    \"title\": \"sample-rate|sample rate\"\n  }, \"[[sample-rate|sample rate]]\"), \" of 44100 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sampling-signal-processingorsamples\",\n    \"title\": \"sampling-signal-processing|samples\"\n  }, \"[[sampling-signal-processing|samples]]\"), \" per second.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" = 96 dB, N = 22050\")), mdx(\"p\", null, \"Many professional studios work with 24- or 32-bit audio at 192000 samples per second\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dynamic range = 144/192 dB, N = 96000\")), mdx(\"p\", null, \"Higher sample rates/bit depths consume significantly more memory. Are the higher specs worth it?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Debatable, considering that pro-quality audio is often downsampled to 44.1/16 for physical media production/mass distribution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consumer listening often occurs in sub-ideal listening environments, with consumer-grade equipment, etc.\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MUS 407 Sampling\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MUS 407 Digital Audio\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 ece-402 computer-science\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bit\"\n  }, \"Bit\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bit\"), \" is the most basic unit of information in the digital realm. It represents a logical state of one of two values:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"1\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yes\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"no\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"+\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"on\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"off\"))), mdx(\"p\", null, \"\\\"Bit\\\" is a contraction of \\\"binary digit\\\"\"), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Bit\"\n  }, \"https://en.wikipedia.org/wiki/Bit\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"730e90fa-25f8-5546-a4c2-d1bb7932da8d","fields":{"slug":"/docs/bit","title":"Bit"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/digital-audio-standards","title":"Digital Audio Standards"}}},"pageContext":{"id":"8fd40b76-f85c-5470-a789-d5d9b63ed505"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}