{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/sidechain-compression","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"compression production music\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sidechain-compression\"\n  }, \"Sidechain compression\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sidechain compression\"), \" is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/compression\",\n    \"title\": \"compression\"\n  }, \"[[compression]]\"), \" technique involving \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/side-chaining\",\n    \"title\": \"side-chaining\"\n  }, \"[[side-chaining]]\"), \", i.e. the input of one \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/audio-signalorsignal\",\n    \"title\": \"audio-signal|signal\"\n  }, \"[[audio-signal|signal]]\"), \" is used to affect the output of a different signal\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sometimes called \\\"ducking\\\" or \\\"pumping\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"target signal \\\"ducks\\\" out of the way when the source signal passes the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/threshold-drporthreshold\",\n    \"title\": \"threshold-drp|threshold\"\n  }, \"[[threshold-drp|threshold]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"often in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/pop-musicorpop\",\n    \"title\": \"pop-music|pop\"\n  }, \"[[pop-music|pop]]\"), \" and EDM: bass, chords, etc. will duck for the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/kick\",\n    \"title\": \"kick\"\n  }, \"[[kick]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.blackghostaudio.com/blog/the-ultimate-guide-to-compression\"\n  }, \"https://www.blackghostaudio.com/blog/the-ultimate-guide-to-compression\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music compression mus-407 production dynamics drp dynamic-range-compression dynamic-range\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"compression\"\n  }, \"Compression\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Compression\"), \" is a form of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dynamic-range-processingordynamic-range-control\",\n    \"title\": \"dynamic-range-processing|dynamic range control\"\n  }, \"[[dynamic-range-processing|dynamic range control]]\"), \" that (generally) reduces the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" of a signal. A \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"compressor\"), \" is an amplifier whose gain is determined by an input \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/audio-signalorsignal\",\n    \"title\": \"audio-signal|signal\"\n  }, \"[[audio-signal|signal]]\"), \" level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when signal level > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \" threshold, compression effect becomes active and attenuates a signal\")), mdx(\"p\", null, \"Frequently used to regulate a \\\"peaky\\\" signal during recording, i.e. to provide a more constant and predictable level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. rock drum set, swaying vocalist\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"essentially, automates \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/mixer\",\n    \"title\": \"mixer\"\n  }, \"[[mixer]]\"), \" input faders to avoid manual adjustment\")), mdx(\"p\", null, \"Compression is also used during mixing/mastering to provide a higher overall mix level.\"), mdx(\"p\", null, \"Compressor behavior is modeled using a graph of its \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transfer-functionortransfer-function\",\n    \"title\": \"transfer-function|transfer function\"\n  }, \"[[transfer-function|transfer function]]\"), \", which is generally comprised of these parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ratio-drporratio\",\n    \"title\": \"ratio-drp|ratio\"\n  }, \"[[ratio-drp|ratio]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/threshold-drporthreshold\",\n    \"title\": \"threshold-drp|threshold\"\n  }, \"[[threshold-drp|threshold]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"makeup gain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"attack/release\")), mdx(\"p\", null, \"Compressors can also feature the following additional parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"auto mode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lookahead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stereo linking\")), mdx(\"h2\", {\n    \"id\": \"ratio\"\n  }, \"Ratio\"), mdx(\"p\", null, \"The severity of signal attenuation is determined by a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"compression \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"/ratio-drporratio\",\n    \"title\": \"ratio-drp|ratio\"\n  }, \"[[ratio-drp|ratio]]\"), \"\"), \".\"), mdx(\"p\", null, \"Downward compression ratios of 8:1 and above are generally considered \\\"extreme\\\" compression\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can result in a perceptual distortion of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transientortransients\",\n    \"title\": \"transient|transients\"\n  }, \"[[transient|transients]]\"), \", noticeable changes in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/timbre\",\n    \"title\": \"timbre\"\n  }, \"[[timbre]]\"), \", often described as a \\\"squashed\\\" sound\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A compressors with ratios above 10:1 would generally be considered a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/limiter\",\n    \"title\": \"limiter\"\n  }, \"[[limiter]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"makeup-gain\"\n  }, \"Makeup gain\"), mdx(\"p\", null, \"After compression is applied, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"makeup gain\"), \" is a normal amplification process used to compensate for the loss in overall level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"typically used to restore peaks to their original level after compression creates more \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/headroom\",\n    \"title\": \"headroom\"\n  }, \"[[headroom]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"content below threshold, including the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise-floorornoise-floor\",\n    \"title\": \"noise-floor|noise floor\"\n  }, \"[[noise-floor|noise floor]]\"), \", undergoes a net level increases\")), mdx(\"h2\", {\n    \"id\": \"types-of-compression\"\n  }, \"Types of Compression\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/limiterorLimiting\",\n    \"title\": \"limiter|Limiting\"\n  }, \"[[limiter|Limiting]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/upward-compressionorUpward-compression\",\n    \"title\": \"upward-compression|Upward compression\"\n  }, \"[[upward-compression|Upward compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/multiband-compressionorMultiband-compression\",\n    \"title\": \"multiband-compression|Multiband compression\"\n  }, \"[[multiband-compression|Multiband compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/parallel-compressionorParallel-compression\",\n    \"title\": \"parallel-compression|Parallel compression\"\n  }, \"[[parallel-compression|Parallel compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/buss-compressionorBuss-compression\",\n    \"title\": \"buss-compression|Buss compression\"\n  }, \"[[buss-compression|Buss compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/side-chainingorSidechain-compression\",\n    \"title\": \"side-chaining|Sidechain compression\"\n  }, \"[[side-chaining|Sidechain compression]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serial compression\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MUS 407 Dynamic Range Processing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.blackghostaudio.com/blog/the-ultimate-guide-to-compression\"\n  }, \"https://www.blackghostaudio.com/blog/the-ultimate-guide-to-compression\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"fb97a65e-6cd0-5159-bca3-edace78adc10","fields":{"slug":"/docs/compression","title":"Compression"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music production mus-407 side-chaining drp dynamics dynamic-range dynamic-range-processing compression\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"side-chaining\"\n  }, \"Side-Chaining\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Side-chaining\"), \" refers to a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/audio-signalorsignal\",\n    \"title\": \"audio-signal|signal\"\n  }, \"[[audio-signal|signal]]\"), \" routing configuration in which a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"source\"), \" signal controls an effect, while the results are applied to a different, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"target\"), \" signal\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"frequently used with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-range-processingorDRP\",\n    \"title\": \"dynamic-range-processing|DRP\"\n  }, \"[[dynamic-range-processing|DRP]]\"), \", can be used with other types of effects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be viewed as a type of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/modulation-synthesisormodulation-synthesis\",\n    \"title\": \"modulation-synthesis|modulation synthesis\"\n  }, \"[[modulation-synthesis|modulation synthesis]]\"), \"\")), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sidechain-compressionorSidechain-compression\",\n    \"title\": \"sidechain-compression|Sidechain compression\"\n  }, \"[[sidechain-compression|Sidechain compression]]\"), \" is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ducking\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"target signal \\\"ducks\\\" out of the way when the source signal is \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/loudnessorloud\",\n    \"title\": \"loudness|loud\"\n  }, \"[[loudness|loud]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"often in pop music: bass, chords, etc. will duck for the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/kick\",\n    \"title\": \"kick\"\n  }, \"[[kick]]\"), \"\")), mdx(\"p\", null, \"Side-chain expansion/gating is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"amplitude following\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"target signal \\\"follows\\\" the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \" contour of the source signal\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be used to imprint one sound's \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \" onto another (see: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/envelope-shaper\",\n    \"title\": \"envelope-shaper\"\n  }, \"[[envelope-shaper]]\"), \")\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MUS 407 Dynamic Range Processing\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"5b2e5d83-2ab1-5271-aae4-22f9961c5665","fields":{"slug":"/docs/side-chaining","title":"Side-Chaining"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music production audio electronic edm kick kick-drum drums\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"kick-drum\"\n  }, \"Kick Drum\"), mdx(\"p\", null, \"Every kick has 3 main elements:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \" (click)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"body (punchy bit)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"tail (sub-tail)\")), mdx(\"h2\", {\n    \"id\": \"kick-transient\"\n  }, \"Kick Transient\"), mdx(\"p\", null, \"EDM kicks tend to have a high-\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"docs/frequencyorfrequency\",\n    \"title\": \"docs/frequency|frequency\"\n  }, \"[[docs/frequency|frequency]]\"), \" click that gives more presence, while kicks in other styles of music have less of a click.\"), mdx(\"h2\", {\n    \"id\": \"kick-body\"\n  }, \"Kick Body\"), mdx(\"p\", null, \"The bass tends to be put in front of the kick body.\"), mdx(\"h2\", {\n    \"id\": \"kick-tail\"\n  }, \"Kick Tail\"), mdx(\"p\", null, \"The tail of a kick tends to be much shorter than the \\\"quarter-note\\\" length of most tracks, in general near the 8th to 16th note length.\"), mdx(\"h2\", {\n    \"id\": \"kick-envelope\"\n  }, \"Kick Envelope\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \"\"), \" is how the kick behaves over time; how the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \" and body fade into the tail.\"), mdx(\"p\", null, \"Kicks tend to hit a higher frequency at the transient and then fade into lower frequencies during the body and tail.\"), mdx(\"h2\", {\n    \"id\": \"layering\"\n  }, \"Layering\"), mdx(\"p\", null, \"When it comes to layering, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"more isn't better\"), \". If you don't know what you're doing, you can actually create some \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/phase\",\n    \"title\": \"phase\"\n  }, \"[[phase]]\"), \" issues\"), \", which defeats the purpose of layering.\"), mdx(\"p\", null, \"Figure out \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what your kick is missing\"), \", and asking whether you need a new kick or just a new layer.\"), mdx(\"p\", null, \"Layers:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sub\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Punch\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click/transient\")), mdx(\"h2\", {\n    \"id\": \"frequency-guides\"\n  }, \"\\\"Frequency Guides\\\"\"), mdx(\"p\", null, \"Load tracks with kick drums that you want to emulate into your DAW, and use a spectral analyzer to figure out which frequencies match their kick drums.\"), mdx(\"p\", null, \"Then, look at the current kick in your track, and try and match your kick with the kick you want to emulate, either by EQ, adding a layer, or choosing a different kick altogether.\"), mdx(\"h2\", {\n    \"id\": \"tips\"\n  }, \"Tips\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tune the kick to the song \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"only if it needs it\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"punchy\"), \" kick with a busy bass line - leave room in one area of the low \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"docs/frequencyorfrequency\",\n    \"title\": \"docs/frequency|frequency\"\n  }, \"[[docs/frequency|frequency]]\"), \" area for the other.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Try \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/pitch\",\n    \"title\": \"pitch\"\n  }, \"[[pitch]]\"), \" envelope - tuning the kick?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There's no perfect kick: it comes down to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"genre and taste\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"e2838f37-6390-505d-b728-3309ee0a76df","fields":{"slug":"/docs/kick","title":"Kick Drum"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/sidechain-compression","title":"Sidechain compression"}}},"pageContext":{"id":"2b150067-54c6-597b-a64f-edeb8b69a417"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}