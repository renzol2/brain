{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/limiter","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music mus-407 compression dynamics dynamic-range-compression drp\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"limiter\"\n  }, \"Limiter\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"limiter\"), \" is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"docs/compressionorcompressor\",\n    \"title\": \"docs/compression|compressor\"\n  }, \"[[docs/compression|compressor]]\"), \" with an extremely high ratio, typically 10:1 or greater.\"), mdx(\"p\", null, \"Limiters are used when preventing clipping/overloading has top priority, e.g.:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"operating in a volatile digital system, such as live coding or a no-input mixer performance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"recording in a live concert setting to prevent overloading the absolute dynamic range of any component in the recording chain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"to prevent damage to irreplaceable equipment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when there is only one opportunity to capture a unique recording\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"more commonly, to prevent clipping during the analog-to-digital conversion process\")), mdx(\"p\", null, \"Limiters use peak/\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \" tracking and/or a \\\"look ahead\\\" delay to properly anticipate and limit instantaneous peak levels.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sound sound-properties amplitude\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"transient\"\n  }, \"Transient\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"transient\"), \" in sound and music is a moment where the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \" changes drastically, conventionally in a large upward change.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"used synonymously with \\\"attack\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"associated with percussion and drums, ex. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/kick\",\n    \"title\": \"kick\"\n  }, \"[[kick]]\"), \" drums\")), mdx(\"p\", null, \"In an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \", the transient is the envelope region during which amplitude is changing.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"02df71de-6a20-5c6a-ac13-67598e6da6ef","fields":{"slug":"/docs/transient","title":"Transient"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music mus-407 electroacoustic dynamic-range dynamics\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"dynamic-range-processing\"\n  }, \"Dynamic Range Processing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#dynamic-range-processing\"\n  }, \"Dynamic Range Processing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#key-concepts\"\n  }, \"Key Concepts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#types\"\n  }, \"Types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#more-terms--techniques\"\n  }, \"More Terms & Techniques\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#drp-considerations\"\n  }, \"DRP Considerations\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#attack-hold-release\"\n  }, \"Attack, Hold, Release\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#upwarddownward-compression--expansion\"\n  }, \"Upward/Downward Compression & Expansion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#side-chaining\"\n  }, \"Side-Chaining\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#transfer-function-examples\"\n  }, \"Transfer Function Examples\"))))), mdx(\"p\", null, \"Dynamic range processing transforms the amplitude of signals. A \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"dynamic range process\"), \" (DRP) changes a signal's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" by altering its \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"measuring signal amplitude\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"adjusts signal amplitude based on measured value\")), mdx(\"p\", null, \"Measured & processed signals can be the same or different (i.e. there can be distinct \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"source\"), \" & \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"target\"), \" signals. see: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/side-chainingorSidechaining\",\n    \"title\": \"side-chaining|Sidechaining\"\n  }, \"[[side-chaining|Sidechaining]]\"), \")\"), mdx(\"p\", null, \"Applications include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"maintaining a constant signal level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"increasing the overall level of a mix\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"creative \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \" shaping\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise\",\n    \"title\": \"noise\"\n  }, \"[[noise]]\"), \" reduction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"preventing clipping/overloading\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/side-chainingorsidechaining\",\n    \"title\": \"side-chaining|sidechaining\"\n  }, \"[[side-chaining|sidechaining]]\"), \" (amplitude following, ducking)\")), mdx(\"h2\", {\n    \"id\": \"key-concepts\"\n  }, \"Key Concepts\"), mdx(\"p\", null, \"All forms of DRP rely on an amplitude \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"threshold\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"determines signal level above or below which DRP take effect, depending on the type of effect\")), mdx(\"p\", null, \"DRPs utilize a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"detection circuit\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"detection \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/algorithm\",\n    \"title\": \"algorithm\"\n  }, \"[[algorithm]]\"), \"\"), \" for tracking signal amplitude, which can track either \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"peak\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"average\"), \" signal level\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Peak\"), \": instantaneous measurement, captures true waveform peaks: \\\"no sample left unchecked\\\"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"more applicable for preventing overloading/clipping.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Average\"), \": signal values averaged over a time interval, also called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"RMS\"), \" (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/root-mean-square\",\n    \"title\": \"root-mean-square\"\n  }, \"[[root-mean-square]]\"), \") tracking\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sculpting the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" of the sound without closely monitoring every single peak or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"provides a smoother response to a changing input signal\")), mdx(\"h2\", {\n    \"id\": \"types\"\n  }, \"Types\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise-gateorNoise-gate\",\n    \"title\": \"noise-gate|Noise gate\"\n  }, \"[[noise-gate|Noise gate]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Compressor (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"docs/compressionorcompression\",\n    \"title\": \"docs/compression|compression\"\n  }, \"[[docs/compression|compression]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Limiter\",\n    \"title\": \"Limiter\"\n  }, \"[[Limiter]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Expander\",\n    \"title\": \"Expander\"\n  }, \"[[Expander]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/envelope-shaperorEnvelope-shaper\",\n    \"title\": \"envelope-shaper|Envelope shaper\"\n  }, \"[[envelope-shaper|Envelope shaper]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"more-terms--techniques\"\n  }, \"More Terms & Techniques\"), mdx(\"h3\", {\n    \"id\": \"drp-considerations\"\n  }, \"DRP Considerations\"), mdx(\"p\", null, \"DRPs, particularly compressors (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"docs/compressionorcompression\",\n    \"title\": \"docs/compression|compression\"\n  }, \"[[docs/compression|compression]]\"), \") and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/limiter\",\n    \"title\": \"limiter\"\n  }, \"[[limiter]]\"), \"s, can smear/distort transients\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"like all effects, easy to overuse, generally should be applied in moderation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be used in extremes for creative effect\")), mdx(\"p\", null, \"DRPs may involve a \\\"look ahead\\\" time to properly anticipate signal levels\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"introduces a small delay into processed audio\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can create synchronization issues, but usually automatically or easily managed in DAW context\")), mdx(\"p\", null, \"DRPs generally have more applications in recording/live sound.\"), mdx(\"p\", null, \"In \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/electroacoustic-musicorelectroacoustic\",\n    \"title\": \"electroacoustic-music|electroacoustic\"\n  }, \"[[electroacoustic-music|electroacoustic]]\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/music-compositionorcomposition\",\n    \"title\": \"music-composition|composition\"\n  }, \"[[music-composition|composition]]\"), \", traditional application of DRP is less useful\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"composer has complete control over levels during compositional process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can usually go back and adjust levels as necessary\")), mdx(\"h3\", {\n    \"id\": \"attack-hold-release\"\n  }, \"Attack, Hold, Release\"), mdx(\"p\", null, \"Many DRPs include \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \" parameters: often \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"attack/release\"), \", sometimes \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"hold\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Attack\"), \" determines the amount of time for DRP effect to fully activate. The attack \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \" begins when signal crosses the threshold.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Release\"), \" determines amount of time for DRP effect to deactivate completely. Release transient begins when level no longer crosses threshold.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hold\"), \" will force DRP effect to remain active for a time, regardless of threshold.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be exploited for creative transient shaping (used explicitly in envelope shapers)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"useful in noise gates to prevent intermittent signal near threshold\")), mdx(\"h3\", {\n    \"id\": \"upwarddownward-compression--expansion\"\n  }, \"Upward/Downward Compression & Expansion\"), mdx(\"p\", null, \"Typical cases:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"compressors attenuate above a threshold (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"docs/compressionorcompression\",\n    \"title\": \"docs/compression|compression\"\n  }, \"[[docs/compression|compression]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/expander\",\n    \"title\": \"expander\"\n  }, \"[[expander]]\"), \"s attenuate below a threshold\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"both referred to as \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\\"downward\\\"\"), \" compression/expansion\")), mdx(\"p\", null, \"However, it is sometimes possible to set a threshold and amplify signal below it, considered a form of compression.\"), mdx(\"p\", null, \"Likewise, it is possible to boost signal above a threshold - a form of expansion.\"), mdx(\"p\", null, \"This technique is infrequently used:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"upward compression raises the noise floor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"upward expansion makes peaks even \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/loudnessorlouder\",\n    \"title\": \"loudness|louder\"\n  }, \"[[loudness|louder]]\"), \"\")), mdx(\"h3\", {\n    \"id\": \"side-chaining\"\n  }, \"Side-Chaining\"), mdx(\"p\", null, \"See: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/side-chainingorSidechaining\",\n    \"title\": \"side-chaining|Sidechaining\"\n  }, \"[[side-chaining|Sidechaining]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"transfer-function-examples\"\n  }, \"Transfer Function Examples\"), mdx(\"p\", null, \"All DRP effects can be represented through a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transfer-functionortransfer-function\",\n    \"title\": \"transfer-function|transfer function\"\n  }, \"[[transfer-function|transfer function]]\"), \", a function between an input signal (in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/decibelordB\",\n    \"title\": \"decibel|dB\"\n  }, \"[[decibel|dB]]\"), \") and an output signal with a processed \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"abfd484c-86a2-51d0-a7a9-ba105b4718e3","fields":{"slug":"/docs/dynamic-range-processing","title":"Dynamic Range Processing"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music mus-407 electroacoustic dynamic-range dynamics\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"dynamic-range-processing\"\n  }, \"Dynamic Range Processing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#dynamic-range-processing\"\n  }, \"Dynamic Range Processing\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#key-concepts\"\n  }, \"Key Concepts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#types\"\n  }, \"Types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#more-terms--techniques\"\n  }, \"More Terms & Techniques\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#drp-considerations\"\n  }, \"DRP Considerations\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#attack-hold-release\"\n  }, \"Attack, Hold, Release\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#upwarddownward-compression--expansion\"\n  }, \"Upward/Downward Compression & Expansion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#side-chaining\"\n  }, \"Side-Chaining\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#transfer-function-examples\"\n  }, \"Transfer Function Examples\"))))), mdx(\"p\", null, \"Dynamic range processing transforms the amplitude of signals. A \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"dynamic range process\"), \" (DRP) changes a signal's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" by altering its \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"measuring signal amplitude\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"adjusts signal amplitude based on measured value\")), mdx(\"p\", null, \"Measured & processed signals can be the same or different (i.e. there can be distinct \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"source\"), \" & \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"target\"), \" signals. see: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/side-chainingorSidechaining\",\n    \"title\": \"side-chaining|Sidechaining\"\n  }, \"[[side-chaining|Sidechaining]]\"), \")\"), mdx(\"p\", null, \"Applications include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"maintaining a constant signal level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"increasing the overall level of a mix\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"creative \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \" shaping\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise\",\n    \"title\": \"noise\"\n  }, \"[[noise]]\"), \" reduction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"preventing clipping/overloading\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/side-chainingorsidechaining\",\n    \"title\": \"side-chaining|sidechaining\"\n  }, \"[[side-chaining|sidechaining]]\"), \" (amplitude following, ducking)\")), mdx(\"h2\", {\n    \"id\": \"key-concepts\"\n  }, \"Key Concepts\"), mdx(\"p\", null, \"All forms of DRP rely on an amplitude \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"threshold\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"determines signal level above or below which DRP take effect, depending on the type of effect\")), mdx(\"p\", null, \"DRPs utilize a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"detection circuit\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"detection \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/algorithm\",\n    \"title\": \"algorithm\"\n  }, \"[[algorithm]]\"), \"\"), \" for tracking signal amplitude, which can track either \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"peak\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"average\"), \" signal level\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Peak\"), \": instantaneous measurement, captures true waveform peaks: \\\"no sample left unchecked\\\"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"more applicable for preventing overloading/clipping.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Average\"), \": signal values averaged over a time interval, also called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"RMS\"), \" (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/root-mean-square\",\n    \"title\": \"root-mean-square\"\n  }, \"[[root-mean-square]]\"), \") tracking\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sculpting the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" of the sound without closely monitoring every single peak or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"provides a smoother response to a changing input signal\")), mdx(\"h2\", {\n    \"id\": \"types\"\n  }, \"Types\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/noise-gateorNoise-gate\",\n    \"title\": \"noise-gate|Noise gate\"\n  }, \"[[noise-gate|Noise gate]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Compressor (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"docs/compressionorcompression\",\n    \"title\": \"docs/compression|compression\"\n  }, \"[[docs/compression|compression]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Limiter\",\n    \"title\": \"Limiter\"\n  }, \"[[Limiter]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Expander\",\n    \"title\": \"Expander\"\n  }, \"[[Expander]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/envelope-shaperorEnvelope-shaper\",\n    \"title\": \"envelope-shaper|Envelope shaper\"\n  }, \"[[envelope-shaper|Envelope shaper]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"more-terms--techniques\"\n  }, \"More Terms & Techniques\"), mdx(\"h3\", {\n    \"id\": \"drp-considerations\"\n  }, \"DRP Considerations\"), mdx(\"p\", null, \"DRPs, particularly compressors (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"docs/compressionorcompression\",\n    \"title\": \"docs/compression|compression\"\n  }, \"[[docs/compression|compression]]\"), \") and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/limiter\",\n    \"title\": \"limiter\"\n  }, \"[[limiter]]\"), \"s, can smear/distort transients\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"like all effects, easy to overuse, generally should be applied in moderation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be used in extremes for creative effect\")), mdx(\"p\", null, \"DRPs may involve a \\\"look ahead\\\" time to properly anticipate signal levels\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"introduces a small delay into processed audio\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can create synchronization issues, but usually automatically or easily managed in DAW context\")), mdx(\"p\", null, \"DRPs generally have more applications in recording/live sound.\"), mdx(\"p\", null, \"In \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/electroacoustic-musicorelectroacoustic\",\n    \"title\": \"electroacoustic-music|electroacoustic\"\n  }, \"[[electroacoustic-music|electroacoustic]]\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/music-compositionorcomposition\",\n    \"title\": \"music-composition|composition\"\n  }, \"[[music-composition|composition]]\"), \", traditional application of DRP is less useful\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"composer has complete control over levels during compositional process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can usually go back and adjust levels as necessary\")), mdx(\"h3\", {\n    \"id\": \"attack-hold-release\"\n  }, \"Attack, Hold, Release\"), mdx(\"p\", null, \"Many DRPs include \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/envelope\",\n    \"title\": \"envelope\"\n  }, \"[[envelope]]\"), \" parameters: often \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"attack/release\"), \", sometimes \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"hold\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Attack\"), \" determines the amount of time for DRP effect to fully activate. The attack \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transient\",\n    \"title\": \"transient\"\n  }, \"[[transient]]\"), \" begins when signal crosses the threshold.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Release\"), \" determines amount of time for DRP effect to deactivate completely. Release transient begins when level no longer crosses threshold.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hold\"), \" will force DRP effect to remain active for a time, regardless of threshold.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be exploited for creative transient shaping (used explicitly in envelope shapers)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"useful in noise gates to prevent intermittent signal near threshold\")), mdx(\"h3\", {\n    \"id\": \"upwarddownward-compression--expansion\"\n  }, \"Upward/Downward Compression & Expansion\"), mdx(\"p\", null, \"Typical cases:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"compressors attenuate above a threshold (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"docs/compressionorcompression\",\n    \"title\": \"docs/compression|compression\"\n  }, \"[[docs/compression|compression]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/expander\",\n    \"title\": \"expander\"\n  }, \"[[expander]]\"), \"s attenuate below a threshold\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"both referred to as \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\\"downward\\\"\"), \" compression/expansion\")), mdx(\"p\", null, \"However, it is sometimes possible to set a threshold and amplify signal below it, considered a form of compression.\"), mdx(\"p\", null, \"Likewise, it is possible to boost signal above a threshold - a form of expansion.\"), mdx(\"p\", null, \"This technique is infrequently used:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"upward compression raises the noise floor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"upward expansion makes peaks even \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/loudnessorlouder\",\n    \"title\": \"loudness|louder\"\n  }, \"[[loudness|louder]]\"), \"\")), mdx(\"h3\", {\n    \"id\": \"side-chaining\"\n  }, \"Side-Chaining\"), mdx(\"p\", null, \"See: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/side-chainingorSidechaining\",\n    \"title\": \"side-chaining|Sidechaining\"\n  }, \"[[side-chaining|Sidechaining]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"transfer-function-examples\"\n  }, \"Transfer Function Examples\"), mdx(\"p\", null, \"All DRP effects can be represented through a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transfer-functionortransfer-function\",\n    \"title\": \"transfer-function|transfer function\"\n  }, \"[[transfer-function|transfer function]]\"), \", a function between an input signal (in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/decibelordB\",\n    \"title\": \"decibel|dB\"\n  }, \"[[decibel|dB]]\"), \") and an output signal with a processed \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"abfd484c-86a2-51d0-a7a9-ba105b4718e3","fields":{"slug":"/docs/dynamic-range-processing","title":"Dynamic Range Processing"}}}]},"fields":{"slug":"/docs/limiter","title":"Limiter"}}},"pageContext":{"id":"0e9b3c40-58fb-588d-a4ed-e916a7bf2ac8"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}