{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/frequency-decomposition","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"ece-402 dsp\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"frequency-decomposition\"\n  }, \"Frequency Decomposition\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Frequency decomposition\"), \" is the process of separating a signal into its individual \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/frequencyorfrequencies\",\n    \"title\": \"frequency|frequencies\"\n  }, \"[[frequency|frequencies]]\"), \", usually to perform some \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/spectral-analysisorspectral-analysis\",\n    \"title\": \"spectral-analysis|spectral analysis\"\n  }, \"[[spectral-analysis|spectral analysis]]\"), \" on the signal.\"), mdx(\"p\", null, \"There are many practical applications to frequency decomposition, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deconstructing radio waves to choose which particular radio station to listen to\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deconstructing \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/audio-signaloraudio-signals\",\n    \"title\": \"audio-signal|audio signals\"\n  }, \"[[audio-signal|audio signals]]\"), \" into different frequency bands like bass and treble, to remove unwanted frequencies or boost wanted ones\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deconstructing earthquake vibrations of different speeds and strengths to optimize architectural designs to withstand earthquakes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deconstructing computer data for use in file compression, to ignore less important frequencies and keep important ones\")), mdx(\"p\", null, \"To perform frequency decomposition, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/fourier-transformorFourier-transforms\",\n    \"title\": \"fourier-transform|Fourier transforms\"\n  }, \"[[fourier-transform|Fourier transforms]]\"), \" are used to deconstruct a continuous signal in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/time-domainortime-domain\",\n    \"title\": \"time-domain|time domain\"\n  }, \"[[time-domain|time domain]]\"), \" into a signal in the frequency domain.\"), mdx(\"p\", null, \"In digital signal processing, a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/discrete-fourier-transformorDiscrete-Fourier-Transform-(DFT)\",\n    \"title\": \"discrete-fourier-transform|Discrete Fourier Transform (DFT)\"\n  }, \"[[discrete-fourier-transform|Discrete Fourier Transform (DFT)]]\"), \" is used to convert a digital representation of a signal (finite sequence of equally-spaced samples) into a function of frequency. In practical applications, the DFT is implemented using Fast Fourier Transform (FFT).\"), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://download.ni.com/evaluation/pxi/Understanding%20FFTs%20and%20Windowing.pdf\"\n  }, \"https://download.ni.com/evaluation/pxi/Understanding%20FFTs%20and%20Windowing.pdf\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/docs/frequency-decomposition","title":"Frequency Decomposition"}}},"pageContext":{"id":"489e1334-d13d-58ed-a777-d51900a90966"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}