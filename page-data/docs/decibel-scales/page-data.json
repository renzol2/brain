{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/decibel-scales","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sound sound-properties amplitude decibel\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"decibel-scales\"\n  }, \"Decibel Scales\"), mdx(\"p\", null, \"There are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"two\"), \" distinct cases of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/decibel\",\n    \"title\": \"decibel\"\n  }, \"[[decibel]]\"), \" scale for use of measurement:\"), mdx(\"h2\", {\n    \"id\": \"sound-pressure-level\"\n  }, \"Sound pressure level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dB SPL\"), \" (decibel sound pressure level)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"used for measuring sound level of an acoustic environment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"0 dB = threshold of hearing\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"below 0 dB, you cannot hear it\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"120-130 dB = threshold of pain\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when representing \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/dynamic-rangeordynamic-range\",\n    \"title\": \"dynamic-range|dynamic range\"\n  }, \"[[dynamic-range|dynamic range]]\"), \" through \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/bit-depthorbit-depth\",\n    \"title\": \"bit-depth|bit depth\"\n  }, \"[[bit-depth|bit depth]]\"), \" in a digital system, we don't need to exceed a bit depth that allows for more than the pain threshold\")))), mdx(\"h2\", {\n    \"id\": \"electrical-signal-level\"\n  }, \"Electrical signal level\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"analog\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dBV\"), \" (voltage) , \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dBu\"), \" (unloaded)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"digital\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dBFS\"), \" (relative to \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"full scale\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What does 0 dB mean?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"analog\"), \": nominal operating level, optimal I/O linearity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"digital:\"), \" highest representable level without introducing clipping/distortion\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"positive digital dBFS values are \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"bad\")), \": clipping, nasty distortion\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"signal levels below 0 dB have negative values\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"mus-407 sound sound-properties amplitude decibel\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"decibel\"\n  }, \"Decibel\"), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"decibel\"), \" is a logarithmic unit for describing power and intensity, providing a more concise, convenient and meaningful range of numbers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"abbreviated \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"dB\"), \", 1/10th of a bel, named after Alexander Graham Bell\")), mdx(\"p\", null, \"The decibel is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"always\"), \" a relative measurement, either comparing two quantities of comparing one quantity to an implied reference value. This value always depends on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"context\")), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"threshold of perception = +-1 dB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"doubling/halving sound power = +- 3 dB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"doubling/halving distance from a sound source = += 6 dB\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also when you cut the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/amplitude\",\n    \"title\": \"amplitude\"\n  }, \"[[amplitude]]\"), \" in half (or double the height of amplitude)\")))), mdx(\"p\", null, \"Decibels are used on a variety of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/decibel-scalesorscales\",\n    \"title\": \"decibel-scales|scales\"\n  }, \"[[decibel-scales|scales]]\"), \", depending on the context.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"354a43d8-5f83-5e9f-941f-1e56132fc8ff","fields":{"slug":"/docs/decibel","title":"Decibel"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/decibel-scales","title":"Decibel Scales"}}},"pageContext":{"id":"ba73ab93-8d19-5c55-b2e2-a103ae60cb98"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}