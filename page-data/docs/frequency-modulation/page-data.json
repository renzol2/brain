{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/frequency-modulation","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"music synthesis frequency modulation mus-305 mus-407\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"frequency-modulation\"\n  }, \"Frequency Modulation\"), mdx(\"p\", null, \"In \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"frequency modulation\"), \" (FM), the frequency of a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"carrier\"), \" signal is altered by a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"modulator\"), \" signal.\"), mdx(\"p\", null, \"Deviations of the carrier causes spectral sidebands at multiples of the modulator above and below the carrier.\"), mdx(\"p\", null, \"TODO: import 407 notes\"), mdx(\"h2\", {\n    \"id\": \"the-cm-ratio\"\n  }, \"The C:M Ratio\"), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"carrier to modulator ratio (C:M)\"), \" determines the harmonicity of the resulting spectrum\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"for harmonic spectra, $M$ must have an integer relationship to $C$\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non integer ratios produce inharmonic spectra\")), mdx(\"h2\", {\n    \"id\": \"composing-with-fm\"\n  }, \"Composing with FM\"), mdx(\"p\", null, \"In \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/spectral-compositionorspectral-composition\",\n    \"title\": \"spectral-composition|spectral composition\"\n  }, \"[[spectral-composition|spectral composition]]\"), \", FM is a powerful algorithm for generating spectral note sets!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can generate inharmonic (dissonant) or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/harmonic-seriesorharmonic\",\n    \"title\": \"harmonic-series|harmonic\"\n  }, \"[[harmonic-series|harmonic]]\"), \" (consonant) sets\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/docs/frequency-modulation","title":"Frequency Modulation"}}},"pageContext":{"id":"640dfaf9-d5a6-5434-814c-fb2250b53bb2"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}