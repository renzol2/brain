{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/cross-synthesis","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"ece-402 dsp cross-synthesis\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cross-synthesis\"\n  }, \"Cross Synthesis\"), mdx(\"p\", null, \"Cross synthesis is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sound-synthesisorsynthesis\",\n    \"title\": \"sound-synthesis|synthesis\"\n  }, \"[[sound-synthesis|synthesis]]\"), \" technique that combines some aspects from one endpoint \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/timbre\",\n    \"title\": \"timbre\"\n  }, \"[[timbre]]\"), \" and other aspects from another timbre.\"), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ECE 402 Lecture 19\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"ece-402 timbre\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"timbre\"\n  }, \"Timbre\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Timbre\"), \" is the \\\"color\\\" or quality of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/sound-wavesorsounds\",\n    \"title\": \"sound-waves|sounds\"\n  }, \"[[sound-waves|sounds]]\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"related to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/sound-wavesorsound\",\n    \"title\": \"sound-waves|sound\"\n  }, \"[[sound-waves|sound]]\"), \" quality\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"specified by qualitative adjectives (e.g. bright or dull)\")), mdx(\"h2\", {\n    \"id\": \"perception\"\n  }, \"Perception\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Timbre is \\\"attribute of auditory sensation in terms of which a listener can judge that two sounds are dissimilar, when the two sounds are similarly presented having the same loudness, pitch, and duration.\\\" (Acoustical Society of America, ASA).\")), mdx(\"p\", null, \"Timbre is usually separated conceptually from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/pitch\",\n    \"title\": \"pitch\"\n  }, \"[[pitch]]\"), \" and loudness.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"our ability to distinguish between sounds relies on our perception of a sound's timbre over time\")), mdx(\"h2\", {\n    \"id\": \"analysis\"\n  }, \"Analysis\"), mdx(\"p\", null, \"There are several ways of analyzing timbre, including\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the concept of the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/timbre-spaceorTimbre-Space\",\n    \"title\": \"timbre-space|Timbre Space\"\n  }, \"[[timbre-space|Timbre Space]]\"), \" by John M. Grey\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the use of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/spectral-analysisorspectral-analysis\",\n    \"title\": \"spectral-analysis|spectral analysis\"\n  }, \"[[spectral-analysis|spectral analysis]]\"), \" to produce a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/spectrum\",\n    \"title\": \"spectrum\"\n  }, \"[[spectrum]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://asastandards.org/Terms/timbre/\"\n  }, \"https://asastandards.org/Terms/timbre/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ccrma.stanford.edu/files/papers/stanm2.pdf\"\n  }, \"https://ccrma.stanford.edu/files/papers/stanm2.pdf\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"a072815e-f6bf-5e42-89e9-f9a22beadbd0","fields":{"slug":"/docs/timbre","title":"Timbre"}}}],"inboundReferences":[]},"fields":{"slug":"/docs/cross-synthesis","title":"Cross Synthesis"}}},"pageContext":{"id":"c4897305-01a4-51f1-9112-18a7afbe4188"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}